{"ast":null,"code":"var _jsxFileName = \"/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LAUNCH_QUERY = gql`\nquery LaunchQuery($id: String!) {\n    launch(id: $id) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id,\n            rocket_name,\n            rocket_type\n        }\n    }\n}\n`;\n\nconst Launch = props => {\n  _s();\n\n  const {\n    id\n  } = props.match.params; //matching parameter used in \n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCH_QUERY, {\n    variables: {\n      id\n    }\n  });\n\n  const displayLaunch = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }, this);\n    if (error) console.log(error);\n    const {\n      flight_number,\n      mission_name,\n      launch_success,\n      launch_year,\n      launch_date_local,\n      rocket\n    } = data.launch;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-light\",\n          children: \"Mission:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), \" \", mission_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"Launch Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Flight Number: \", flight_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"LaunchYear: \", /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"YYYY\",\n            children: launch_date_local\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Launch Successful:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classNames({\n              'text-success': launch_success,\n              'text-danger': !launch_success\n            }),\n            children: launch_success ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"my-3\",\n        children: \"Rocket Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"group-list-item\",\n          children: [\"Rocket ID: \", rocket.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"group-list-item\",\n          children: [\"Rocket Name: \", rocket.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"group-list-item\",\n          children: [\"Rocket Type: \", rocket.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-secondary\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: displayLaunch()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Launch, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Launch;\nexport default Launch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Launch\");","map":{"version":3,"sources":["/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launch.js"],"names":["React","gql","useQuery","Link","classNames","Moment","LAUNCH_QUERY","Launch","props","id","match","params","loading","error","data","variables","displayLaunch","console","log","flight_number","mission_name","launch_success","launch_year","launch_date_local","rocket","launch","name","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\n\nconst LAUNCH_QUERY = gql `\nquery LaunchQuery($id: String!) {\n    launch(id: $id) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id,\n            rocket_name,\n            rocket_type\n        }\n    }\n}\n`;\n\nconst Launch = (props) => {\n    const { id } = props.match.params; //matching parameter used in \n    const { loading, error, data } = useQuery(\n                                        LAUNCH_QUERY, \n                                        { variables: { id } }\n                                    );\n\n    const displayLaunch = () => {\n        if (loading) return <h4>Loading...</h4>;\n        if (error) console.log(error);\n\n    const { flight_number, mission_name, launch_success, launch_year, launch_date_local, rocket } = data.launch;\n\n        return (\n            <div>\n                <h1 className=\"display-4 my-3\">\n                    <span className=\"text-light\">Mission:</span> {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                    <li className=\"list-group-item\">\n                        LaunchYear: <Moment format=\"YYYY\">{launch_date_local}</Moment>\n                    </li>\n                    <li className=\"list-group-item\">\n                        Launch Successful: \n                        <span className={classNames({\n                            'text-success': launch_success,\n                            'text-danger': !launch_success\n                            })}> \n                        {launch_success ? 'Yes' : 'No'}\n                        </span>\n                    </li>\n                </ul>\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                    <li className=\"group-list-item\">Rocket ID: {rocket.id}</li>\n                    <li className=\"group-list-item\">Rocket Name: {rocket.name}</li>\n                    <li className=\"group-list-item\">Rocket Type: {rocket.type}</li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n            </div>\n        );\n    };\n\n    return <React.Fragment>{displayLaunch()}</React.Fragment>;\n};\n\n\nexport default Launch;"]},"metadata":{},"sourceType":"module"}