{"ast":null,"code":"var _jsxFileName = \"/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react'; //similar to React's Context.Provider\n//It wraps our React app and places the client on the context, which enables us to access it from anywhere in our component tree.\n\nimport { useQuery, gql } from '@apollo/client';\nimport './App.css';\nimport Launches from '';\nimport logo from './spacex_logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n});\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"SpaceX\",\n          style: {\n            width: 300,\n            display: 'block',\n            margin: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/App.js"],"names":["React","Component","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","Launches","logo","client","uri","cache","App","render","width","display","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,cAAT,QAA+B,sBAA/B,C,CAAuD;AACvD;;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,EAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BQ,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIR,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,MAAMS,GAAN,SAAkBX,SAAlB,CAA4B;AAC1BY,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEJ,MAAxB;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA;AACE,UAAA,GAAG,EAAED,IADP;AAEE,UAAA,GAAG,EAAC,QAFN;AAGE,UAAA,KAAK,EAAE;AAAEM,YAAAA,KAAK,EAAC,GAAR;AAAaC,YAAAA,OAAO,EAAE,OAAtB;AAA+BC,YAAAA,MAAM,EAAE;AAAvC;AAHT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAdyB;;AAiB5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react'; //similar to React's Context.Provider\n//It wraps our React app and places the client on the context, which enables us to access it from anywhere in our component tree.\n\nimport { useQuery, gql } from '@apollo/client';\n\nimport './App.css';\nimport Launches from ''\nimport logo from './spacex_logo.png';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n      <div className=\"container\">\n      <img \n        src={logo} \n        alt=\"SpaceX\"\n        style={{ width:300, display: 'block', margin: 'auto'}}\n      />\n      {/* <h1>SpaceX</h1> */}\n      </div>\n      </ApolloProvider>\n    );\n  }\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}