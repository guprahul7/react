{"ast":null,"code":"var _jsxFileName = \"/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launches.js\",\n    _s = $RefreshSig$();\n\n//Launches is where we want to make the query to GraphQL\n//We want to use class based components\nimport React, { Component } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n/*The query part is in the render. Creating it here.\nquery LaunchesQuery is just to label that query\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nconst getData = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCHES_QUERY);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this);\n  }\n\n  if (error) {\n    console.log(\"error=\", error);\n  }\n\n  console.log(\"data=\", data);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(getData, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\nexport class Launches extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 my-3\",\n        children: \"Launches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Launches;","map":{"version":3,"sources":["/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launches.js"],"names":["React","Component","gql","useQuery","LAUNCHES_QUERY","getData","loading","error","data","console","log","Launches","render"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAGA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAGF,GAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBL,QAAQ,CAACC,cAAD,CAAvC;;AACA,MAAIE,OAAJ,EAAa;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA4B;;AAC1C,MAAIC,KAAJ,EAAW;AAACE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AAA8B;;AAC1CE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAND;;GAAMH,O;UAC6BF,Q;;;AAOnC,OAAO,MAAMQ,QAAN,SAAuBV,SAAvB,CAAiC;AACpCW,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AATmC;AAaxC,eAAeD,QAAf","sourcesContent":["//Launches is where we want to make the query to GraphQL\n//We want to use class based components\n\nimport React, { Component } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\n\n/*The query part is in the render. Creating it here.\nquery LaunchesQuery is just to label that query\n*/\nconst LAUNCHES_QUERY = gql `\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nconst getData = () => {\n    const {loading, error, data} = useQuery(LAUNCHES_QUERY);\n    if (loading) {return <h4>Loading...</h4>;}\n    if (error) {console.log(\"error=\", error);}\n    console.log(\"data=\", data);\n    return <h1>test</h1>;\n};\n\nexport class Launches extends Component {\n    render() {\n  \n        return (\n            <div>\n                <h1 className=\"display-4 my-3\">Launches</h1>\n                 \n            </div>\n        )\n    }\n}\n\n\nexport default Launches"]},"metadata":{},"sourceType":"module"}