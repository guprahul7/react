{"ast":null,"code":"var _jsxFileName = \"/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launch.js\",\n    _s = $RefreshSig$();\n\nimport { React, Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LAUNCH_QUERY = gql`\nquery LaunchQuery($flight_number: String!) {\n    launch(flight_number: $flight_number) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id,\n            rocket_name,\n            rocket_type\n        }\n    }\n}\n`;\n\nconst Launch = props => {\n  _s();\n\n  const {\n    flight_number\n  } = props.match.params;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCH_QUERY, {\n    variables: {\n      flight_number\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Launch, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Launch;\nexport default Launch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Launch\");","map":{"version":3,"sources":["/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launch.js"],"names":["React","Fragment","gql","useQuery","Link","classNames","LAUNCH_QUERY","Launch","props","flight_number","match","params","loading","error","data","variables"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,YAAY,GAAGJ,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,MAAMK,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAAK,CAACE,KAAN,CAAYC,MAAtC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CACLG,YADK,EAEL;AAAES,IAAAA,SAAS,EAAE;AAACN,MAAAA;AAAD;AAAb,GAFK,CAAzC;AAMA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAbD;;GAAMF,M;UAE+BJ,Q;;;KAF/BI,M;AAgBN,eAAeA,MAAf","sourcesContent":["import {React, Fragment} from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql `\nquery LaunchQuery($flight_number: String!) {\n    launch(flight_number: $flight_number) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id,\n            rocket_name,\n            rocket_type\n        }\n    }\n}\n`;\n\nconst Launch = (props) => {\n    const { flight_number } = props.match.params;\n    const { loading, error, data } = useQuery(\n                                        LAUNCH_QUERY, \n                                        { variables: {flight_number} }\n                                    );\n\n                                    \n    return (\n        <Fragment>\n            <h1>Launch</h1>\n        </Fragment>\n    );\n}\n\n\nexport default Launch;"]},"metadata":{},"sourceType":"module"}