{"ast":null,"code":"var _jsxFileName = \"/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launches.js\",\n    _s = $RefreshSig$();\n\n//Launches is where we want to make the query to GraphQL\n//We want to use class based components\nimport React, { Component } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport LaunchItem from './launchitem';\n/*The query part is in the render. Creating it here.\nquery LaunchesQuery is just to label that query\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nconst Launches = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCHES_QUERY);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this);\n  }\n\n  if (error) {\n    console.log(\"error=\", error);\n  } //console.log(\"data=\", data);\n\n\n  let filteredLaunches = data.launches;\n\n  const displayLaunches = () => {\n    return filteredLaunches.map(launch => /*#__PURE__*/_jsxDEV(LaunchItem, {\n      launch: launch\n    }, launch.flight_number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4 my-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}; // function Launches() {\n//     const {loading, error, data} = useQuery(LAUNCHES_QUERY);\n//     if (loading) {return <h4>Loading...</h4>;}\n//     if (error) {console.log(\"error=\", error);}\n//     console.log(\"data=\", data);\n//     return <h1>test</h1>;\n// };\n// export class Launches extends Component {\n//     render() {\n//         return (\n//             <div>\n//                 <h1 className=\"display-4 my-3\">Launches</h1>\n//             </div>\n//         )\n//     }\n// }\n\n\n_s(Launches, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Launches;\nexport default Launches;\n\nvar _c;\n\n$RefreshReg$(_c, \"Launches\");","map":{"version":3,"sources":["/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launches.js"],"names":["React","Component","gql","useQuery","LaunchItem","LAUNCHES_QUERY","Launches","loading","error","data","console","log","filteredLaunches","launches","displayLaunches","map","launch","flight_number"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAGH,GAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMI,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBN,QAAQ,CAACE,cAAD,CAAvC;;AACA,MAAIE,OAAJ,EAAa;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA4B;;AAC1C,MAAIC,KAAJ,EAAW;AAACE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AAA8B,GAHvB,CAInB;;;AAEA,MAAII,gBAAgB,GAAGH,IAAI,CAACI,QAA5B;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC1B,WAAOF,gBAAgB,CAACG,GAAjB,CAAqBC,MAAM,iBAC9B,QAAC,UAAD;AAAuC,MAAA,MAAM,EAAEA;AAA/C,OAAiBA,MAAM,CAACC,aAAxB;AAAA;AAAA;AAAA;AAAA,YADG,CAAP;AAGH,GAJD;;AAMA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnBD,C,CA0BA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;GA7CMX,Q;UAC6BH,Q;;;KAD7BG,Q;AAgDN,eAAeA,QAAf","sourcesContent":["//Launches is where we want to make the query to GraphQL\n//We want to use class based components\n\nimport React, { Component } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport LaunchItem from './launchitem';\n\n/*The query part is in the render. Creating it here.\nquery LaunchesQuery is just to label that query\n*/\nconst LAUNCHES_QUERY = gql `\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nconst Launches = () => {\n    const {loading, error, data} = useQuery(LAUNCHES_QUERY);\n    if (loading) {return <h4>Loading...</h4>;}\n    if (error) {console.log(\"error=\", error);}\n    //console.log(\"data=\", data);\n    \n    let filteredLaunches = data.launches;\n    const displayLaunches = () => {\n        return filteredLaunches.map(launch => (\n            <LaunchItem key={launch.flight_number} launch={launch}></LaunchItem>\n        ))\n    };\n\n    return (\n        <React.Fragment>\n            <h1 className=\"display-4 my-3\"></h1>\n        {}\n        </React.Fragment>\n    );\n};\n    \n\n\n\n\n\n// function Launches() {\n//     const {loading, error, data} = useQuery(LAUNCHES_QUERY);\n//     if (loading) {return <h4>Loading...</h4>;}\n//     if (error) {console.log(\"error=\", error);}\n//     console.log(\"data=\", data);\n    \n//     return <h1>test</h1>;\n// };\n\n// export class Launches extends Component {\n//     render() {\n  \n//         return (\n//             <div>\n//                 <h1 className=\"display-4 my-3\">Launches</h1>\n                \n//             </div>\n//         )\n//     }\n// }\n\n\nexport default Launches;"]},"metadata":{},"sourceType":"module"}