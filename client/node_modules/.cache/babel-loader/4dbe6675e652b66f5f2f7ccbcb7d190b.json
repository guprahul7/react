{"ast":null,"code":"var _jsxFileName = \"/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LAUNCH_QUERY = gql`\nquery LaunchQuery($flight_number: String!) {\n    launch(flight_number: $flight_number) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id,\n            rocket_name,\n            rocket_type\n        }\n    }\n}\n`;\n\nconst Launch = props => {\n  _s();\n\n  const {\n    flight_number\n  } = props.match.params;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LAUNCH_QUERY, {\n    variables: {\n      flight_number\n    }\n  });\n\n  const displayLaunch = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }, this);\n    if (error) console.log(error);\n    const {\n      flight_number_,\n      mission_name,\n      launch_success,\n      launch_year,\n      launch_date_local,\n      rocket\n    } = data.launch;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-light\",\n          children: \"Mission:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), \" \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"Launch Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: displayLaunch()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Launch, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Launch;\nexport default Launch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Launch\");","map":{"version":3,"sources":["/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launch.js"],"names":["React","gql","useQuery","Link","classNames","Moment","LAUNCH_QUERY","Launch","props","flight_number","match","params","loading","error","data","variables","displayLaunch","console","log","flight_number_","mission_name","launch_success","launch_year","launch_date_local","rocket","launch","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,YAAY,GAAGL,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,MAAMM,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAAK,CAACE,KAAN,CAAYC,MAAtC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CACLI,YADK,EAEL;AAAES,IAAAA,SAAS,EAAE;AAACN,MAAAA;AAAD;AAAb,GAFK,CAAzC;;AAKA,QAAMO,aAAa,GAAG,MAAM;AACxB,QAAIJ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAWI,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEf,UAAM;AAAEM,MAAAA,cAAF;AAAkBC,MAAAA,YAAlB;AAAgCC,MAAAA,cAAhC;AAAgDC,MAAAA,WAAhD;AAA6DC,MAAAA,iBAA7D;AAAgFC,MAAAA;AAAhF,QAA2FV,IAAI,CAACW,MAAtG;AAEI,wBACI;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,OACkDC,IADlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GApBD;;AAsBA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,cAAiBV,aAAa;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA9BD;;GAAMT,M;UAE+BL,Q;;;KAF/BK,M;AAiCN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\n\nconst LAUNCH_QUERY = gql `\nquery LaunchQuery($flight_number: String!) {\n    launch(flight_number: $flight_number) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id,\n            rocket_name,\n            rocket_type\n        }\n    }\n}\n`;\n\nconst Launch = (props) => {\n    const { flight_number } = props.match.params;\n    const { loading, error, data } = useQuery(\n                                        LAUNCH_QUERY, \n                                        { variables: {flight_number} }\n                                    );\n\n    const displayLaunch = () => {\n        if (loading) return <h4>Loading</h4>;\n        if (error) console.log(error);\n\n    const { flight_number_, mission_name, launch_success, launch_year, launch_date_local, rocket } = data.launch;\n\n        return (\n            <div>\n                <h1 className=\"display-4 my-3\">\n                    <span className=\"text-light\">Mission:</span> {name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\"></ul>\n\n\n\n\n                \n            </div>\n        );\n    };\n\n    return <React.Fragment>{displayLaunch()}</React.Fragment>;\n};\n\n\nexport default Launch;"]},"metadata":{},"sourceType":"module"}