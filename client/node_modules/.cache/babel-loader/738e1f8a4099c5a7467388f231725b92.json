{"ast":null,"code":"var _jsxFileName = \"/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launches.js\";\n//Launches is where we want to make the query to GraphQL\n//We want to use class based components\nimport React, { Component } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n/*The query part is in the render. Creating it here.\nquery LaunchesQuery is just to label that query\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\nexport class Launches extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 my-3\",\n        children: \"Launches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Query, {\n        query: LAUNCHES_QUERY,\n        children: ({\n          loading,\n          error,\n          data\n        } = user) => {\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 48\n          }, this);\n          if (error) console.log(error);\n          console.log(\"data=\", data);\n          return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Launches;","map":{"version":3,"sources":["/Users/guprahul7/Desktop/React/spacex_launch_stats/client/src/components/launches.js"],"names":["React","Component","gql","useQuery","LAUNCHES_QUERY","Launches","render","loading","error","data","user","console","log"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAGA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAGF,GAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,OAAO,MAAMG,QAAN,SAAuBJ,SAAvB,CAAiC;AACpCK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,cAAd;AAAA,kBAEQ,CAAE;AAACG,UAAAA,OAAD;AAAUC,UAAAA,KAAV;AAAiBC,UAAAA;AAAjB,YAAyBC,IAA3B,KAAoC;AAChC,cAAGH,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,cAAGC,KAAH,EAAUG,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACVG,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,IAArB;AACA,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;AAPT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAjBmC;AAoBxC,eAAeJ,QAAf","sourcesContent":["//Launches is where we want to make the query to GraphQL\n//We want to use class based components\n\nimport React, { Component } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\n\n/*The query part is in the render. Creating it here.\nquery LaunchesQuery is just to label that query\n*/\nconst LAUNCHES_QUERY = gql `\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nexport class Launches extends Component {\n    render() {\n        return (\n            <div>\n                <h1 className=\"display-4 my-3\">Launches</h1>\n                <Query query={LAUNCHES_QUERY}>\n                    {\n                        ( {loading, error, data} = user) => {\n                            if(loading) return <h4>Loading...</h4>;\n                            if(error) console.log(error);\n                            console.log(\"data=\", data);\n                            return <h1>test</h1>\n                        }\n                    }\n                </Query>\n            </div>\n        )\n    }\n}\n\nexport default Launches"]},"metadata":{},"sourceType":"module"}